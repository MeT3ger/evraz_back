{"RESTfulAPI-master": {}, "run.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: run.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\n\r\n# TODO: \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u043a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\r\n\r\nfrom flask import Flask, g\r\nfrom RESTfulApi.app import api_bp\r\nfrom RESTfulApi.models import register_database\r\n\r\n\r\ndef create_app(**config):\r\n    \"\"\"\r\n    \u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e00\u4e2a Flask App\r\n    :param\r\n    :return\r\n    \"\"\"\r\n    app = Flask(__name__)\r\n    register_config(app, config)\r\n    register_database(app)\r\n    register_routes(app)\r\n    return app\r\n\r\n\r\ndef register_config(app, config):\r\n    if config.get('debug') is True:\r\n        app.debug = True\r\n\r\n    from config import default\r\n    app.config.from_object(default)\r\n\r\n\r\ndef register_routes(app):\r\n    app.register_blueprint(api_bp, url_prefix='/api')\r\n\r\nif __name__ == '__main__':\r\n    create_app(debug=True).run()\r\n", "README.md": "# RESTful\u670d\u52a1\u5668\uff1ahttp://host:port/api\r\n\r\n## \u6240\u6709\u7528\u6237\u89d2\u8272\u53ca\u5176\u6743\u9650\uff1a\r\n\r\n`root`\r\n```\r\n\u9664\u4e86\u6700\u81ea\u5df1\u5220\u3001\u6539\u3001\u67e5\u3002\u62e5\u6709\u4e00\u5207\u6743\u9650\uff08\u53ea\u8981\u5b58\u5728\u8be5\u529f\u80fd\uff09\u3002\r\n```\r\n\r\n`admin`\r\n```\r\n\u9664\u4e86\u5bf9\u4e8eroot\u7528\u6237\u7684\u4e00\u5207\u64cd\u4f5c\uff0c\u5bf9\u540c\u7b49\u7ea7\u89d2\u8272\u7684\u5220\u9664\u4e0e\u66f4\u6539\u3002\u62e5\u6709\u4e00\u5207\u6743\u9650\uff0c\u5177\u4f53\u5982\u4e0b\uff1a\r\n    \u7528\u6237\uff1a\r\n        1\u3001\u83b7\u53d6\u975eroot\u7528\u6237\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\u3002\r\n        2\u3001\u521b\u5efa\u7528\u6237\uff08\u53ef\u521b\u5efaadmin/stuff\u4e24\u79cd\u89d2\u8272\u7684\u7528\u6237\uff09\u3002\r\n        3\u3001\u5220\u9664stuff\u7528\u6237\u3002\r\n        4\u3001\u66f4\u65b0stuff\u548c\u81ea\u5df1\u7684\u8d44\u6599\u3002\r\n        5\u3001\u67e5\u770b\u975eroot\u7528\u6237\u7684\u8be6\u60c5\u4fe1\u606f\u3002\r\n    \u56fe\u4e66\uff1a\r\n        1\u3001\u83b7\u53d6\u56fe\u4e66\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\u3002\r\n        2\u3001\u589e\u52a0\u56fe\u4e66\u3002\r\n        3\u3001\u4e0b\u67b6\u56fe\u4e66\u3002\r\n        4\u3001\u66f4\u65b0\u56fe\u4e66\u4fe1\u606f\u3002\r\n        5\u3001\u67e5\u770b\u56fe\u4e66\u8be6\u60c5\u4fe1\u606f\u3002\r\n    \u4e66\u79cd\uff1a\r\n        1\u3001\u83b7\u53d6\u4e66\u79cd\uff08\u542b\u8fc7\u6ee4\uff09\u3002\r\n        2\u3001\u589e\u52a0\u4e66\u79cd\u3002\r\n        3\u3001\u5220\u9664\u4e66\u79cd\uff08\u524d\u63d0\u662f\u65e0\u56fe\u4e66\u5f15\u7528\u8be5\u4e66\u79cd\uff09\u3002\r\n    \u7d22\u5f15\uff1a\r\n        1\u3001\u67e5\u770b\u5f15\u7528\u67d0\u4e66\u79cd\u7684\u6240\u6709\u4e66\u7c4d\u3002\r\n        2\u3001\u89e3\u9664\u6240\u6709\u4e66\u7c4d\u5bf9\u67d0\u4e66\u79cd\u7684\u5f15\u7528\uff08\u4e4b\u540e\u53ef\u4ee5\u5220\u9664\uff09\u3002\r\n        3\u3001\u67e5\u770b\u4e0e\u67d0\u7528\u6237\u76f8\u5173\u7684\u6240\u6709\u9500\u552e\u8bb0\u5f55\u3002\r\n        4\u3001\u67e5\u770b\u4e0e\u67d0\u56fe\u4e66\u6709\u5173\u7684\u6240\u6709\u9500\u552e\u8bb0\u5f55\u3002\r\n        5\u3001\u67e5\u770b\u4e0e\u67d0VIP\u6709\u5173\u7684\u6240\u6709\u9500\u552e\u8bb0\u5f55\u3002\r\n    \u9500\u552e\u8bb0\u5f55\uff1a\r\n        1\u3001\u83b7\u53d6\u6240\u6709\u9500\u552e\u8bb0\u5f55\u3002\r\n        2\u3001\u589e\u52a0\u9500\u552e\u8bb0\u5f55\uff08\u5373\u552e\u4e66\uff09\u3002\r\n    VIP\uff1a\r\n        1\u3001\u83b7\u53d6VIP\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\u3002\r\n        2\u3001\u521b\u5efaVIP\u3002\r\n        3\u3001\u5220\u9664\u67d0VIP\u3002\r\n```\r\n\r\n`stuff`\r\n```\r\n\u666e\u901a\u5458\u5de5\u7684\u6743\u9650\uff0c\u5177\u4f53\u5982\u4e0b\uff1a\r\n    \u7528\u6237\uff1a\r\n        1\u3001\u83b7\u53d6\u89d2\u8272\u4e3astuff\u7528\u6237\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\u3002\r\n        2\u3001\u66f4\u65b0\u81ea\u5df1\u7684\u8d44\u6599(\u5305\u62ec\u5bc6\u7801)\u3002\r\n        5\u3001\u67e5\u770b\u89d2\u8272\u4e3astuff\u7528\u6237\u7684\u8be6\u60c5\u4fe1\u606f\u3002\r\n    \u56fe\u4e66\uff1a\r\n        1\u3001\u83b7\u53d6\u56fe\u4e66\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\u3002\r\n        2\u3001\u67e5\u770b\u56fe\u4e66\u8be6\u60c5\u4fe1\u606f\u3002\r\n    \u4e66\u79cd\uff1a\r\n        1\u3001\u83b7\u53d6\u4e66\u79cd\uff08\u542b\u8fc7\u6ee4\uff09\u3002\r\n        2\u3001\u589e\u52a0\u4e66\u79cd\u3002\r\n    \u7d22\u5f15\uff1a\r\n        1\u3001\u67e5\u770b\u5f15\u7528\u67d0\u4e66\u79cd\u7684\u6240\u6709\u4e66\u7c4d\u3002\r\n        2\u3001\u67e5\u770b\u4e0e\u67d0\u7528\u6237\u76f8\u5173\u7684\u6240\u6709\u9500\u552e\u8bb0\u5f55\u3002\r\n        3\u3001\u67e5\u770b\u4e0e\u67d0\u56fe\u4e66\u6709\u5173\u7684\u6240\u6709\u9500\u552e\u8bb0\u5f55\u3002\r\n        4\u3001\u67e5\u770b\u4e0e\u67d0VIP\u6709\u5173\u7684\u6240\u6709\u9500\u552e\u8bb0\u5f55\u3002\r\n    \u9500\u552e\u8bb0\u5f55\uff1a\r\n        1\u3001\u589e\u52a0\u9500\u552e\u8bb0\u5f55\uff08\u5373\u552e\u4e66\uff09\u3002\r\n    VIP\uff1a\r\n        1\u3001\u83b7\u53d6VIP\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\u3002\r\n        2\u3001\u521b\u5efaVIP\u3002\r\n        4\u3001\u5220\u9664\u67d0VIP\u3002\r\n```\r\n\r\n## \u6240\u6709\u63a5\u53e3\u5730\u5740\u53ca\u5176\u7b80\u7565\uff1a\r\n  \r\n`/session` *[\u767b\u5f55\u3001\u6ce8\u9500](#session)*\r\n\r\n`/accounts` *[\u83b7\u53d6\u7528\u6237\u3001\u65b0\u589e\u7528\u6237](#accounts)*\r\n`/accounts/<account_id>` *[\u7528\u6237\u5220\u3001\u6539\u3001\u67e5](#accounts-1)*\r\n\r\n`/books` *[\u83b7\u53d6\u56fe\u4e66\u3001\u65b0\u589e\u56fe\u4e66](#books)*\r\n`/books/<book_id>` *[\u56fe\u4e66\u5220\u3001\u6539\u3001\u67e5](#books-1)*\r\n\r\n`/vips` *[\u83b7\u53d6VIP\u3001\u65b0\u589eVIP](#vips)*\r\n`/vips/<vip_id>` *[VIP\u5220\u9664](#vips-1)*\r\n\r\n`/types` *[\u83b7\u53d6\u4e66\u79cd\u3001\u65b0\u589e\u4e66\u79cd](#types)*\r\n`/types/<book_type_id>` *[\u4e66\u79cd\u5220\u9664](#types-1)*\r\n\r\n`/sales_records` *[\u83b7\u53d6\u9500\u552e\u8bb0\u5f55\u3001\u6dfb\u52a0\u9500\u552e\u8bb0\u5f55](#sales_records)*\r\n\r\n`/references/book2type/<book_type_id>` *[\u89e3\u9664\u56fe\u4e66\u5bf9\u4e66\u79cd\u7684\u7d22\u5f15\u3001\u83b7\u53d6\u67d0\u4e66\u79cd\u7684\u6240\u6709\u56fe\u4e66](#book2type)*\r\n`/references/record2account/<account_id>` *[\u83b7\u53d6\u67d0\u7528\u6237\u7684\u552e\u4e66\u8bb0\u5f55](#record2account)*\r\n`/references/record2book/<book_id>` *[\u83b7\u53d6\u67d0\u56fe\u4e66\u7684\u9500\u552e\u8bb0\u5f55](#record2book)*\r\n`/references/record2vip/<vip_id>` *[\u83b7\u53d6\u67d0VIP\u7684\u8d2d\u4e70\u8bb0\u5f55](#record2vip)*\r\n\r\n\r\n## \u8be6\u60c5\u8bf4\u660e\r\n<font color=blue>\u5199\u5728\u524d\u9762</font>\r\n\r\n    1\u3001\u8d8a\u6743\u8bf7\u6c42\u4f1a\u5f97\u5230\u5982\u4e0b\u7edf\u4e00response\r\n    {\r\n      \"message\": \"You don't have the permission to access the requested resource. It is either read-protected or not readable by the server.\"\r\n    }\r\n    \r\n    2\u3001\u9664\u4e86get\u65b9\u6cd5\uff0c\u5176\u4ed6\u65b9\u6cd5\u7684\u8bf7\u6c42\u7ed3\u679c\u90fd\u6709'success'\u5b57\u6bb5\u3002\u53ef\u4ee5\u6839\u636e\u8be5\u5b57\u6bb5\u5224\u65ad\u8bf7\u6c42\u662f\u5426\u6210\u529f\uff0c\u518d\u6839\u636e\u5176\u4f59\u7684message\u6216\u8005token/id\u83b7\u5f97\u5176\u4ed6\u4fe1\u606f\u3002\r\n    \r\n    3\u3001\u5982\u679cform-data\u7f3a\u5c11\u67d0\u5fc5\u8981\u5b57\u6bb5\uff0c\u4f1a\u51fa\u73b0\u5982\u4e0b\u683c\u5f0f\u63d0\u793a\uff08\u4e0b\u9762\u662f\u672a\u586b\u5199\u5bc6\u7801\uff09\r\n    {\r\n      \"message\": {\r\n        \"password\": \"This is password\"\r\n      }\r\n    }\r\n\r\n### /session <span id=\"session\">\u767b\u5f55\u3001\u6ce8\u9500</span> \r\n\r\n#### post: \u767b\u5f55\r\n##### form-data\r\n```\r\nusername: root\r\npassword: password\r\n```\r\n##### response\r\n```\r\n{\r\n  \"id\": \"56ebb6ee159ce145f818193b\",\r\n  \"message\": \"No message\",\r\n  \"success\": 1,\r\n  \"token\": \"0wnCLKVPFG5x2eW8\"\r\n}\r\n```\r\n\r\n#### delete: \u767b\u51fa\r\n##### headers\r\n```\r\ntoken: 0wnCLKVPFG5x2eW8\r\n```\r\n<font color=red>\u6ce8\uff1a\u5982\u65e0\u7279\u522b\u8bf4\u660e\uff0c\u4ee5\u4e0b\u6240\u6709\u8bf7\u6c42\u9664\u4e86\u8981\u6c42\u7684form-data\u6216param\u4ee5\u5916\uff0c\u8fd8\u8981\u5fc5\u987b\u63d0\u4f9bkey\u4e3a\\'token'\u503c\u4e3a\\'XXXX'\u7684header\u952e\u503c\u5bf9\u3002\u6839\u636eRESTful\u7684\u7b49\u5e42\u6027\uff0c\u6b64\u5b57\u6bb5\u63d0\u4f9b\u8eab\u4efd\u9a8c\u8bc1\u3002</font>\r\n##### response\r\n```\r\n{\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n\r\n### /accounts <span id=\"accounts\">\u83b7\u53d6\u7528\u6237\u3001\u65b0\u589e\u7528\u6237</span> \r\n\r\n#### post \u65b0\u589e\u7528\u6237\r\n##### form-data\r\n```\r\nusername: skyduy\r\nnickname: YuJun\r\npassword: secret\r\nconfirm: secret\r\nrole: 1 (\u5176\u4e2d0\u4e3a\u5458\u5de5\uff0c1\u4e3a\u8d85\u7ea7\u7ba1\u7406\u5458)\r\n```\r\n##### response(post /accounts)\r\n```\r\n{\r\n  \"id\": \"56ed05cb159ce12c74a634f5\",\r\n  \"message\": \"No message\",\r\n  \"success\": 1,\r\n  \"token\": \"kdqdxwJowiraNP3D\"\r\n}\r\n```\r\n\r\n#### get \u83b7\u53d6\u6240\u6709\u7528\u6237\r\n##### param(\u53ef\u9009\uff0c\u6b64\u65f6\u8868\u793a\u8fc7\u6ee4\uff1anickname\u6216\u8005username)\uff0c\u5f53\u6709param\u65f6\uff1a\r\n```\r\n/accounts?username=skyduy&&nickname=YuJun\r\n```\r\n##### response(get /accounts)\r\n```\r\n{\r\n  \"accounts\": [\r\n    {\r\n      \"id\": \"56ed05cb159ce12c74a634f5\",\r\n      \"nickname\": \"YuJun\",\r\n      \"role\": \"stuff\"\r\n    },\r\n    {\r\n      \"id\": \"56ed073d159ce12b0c442de8\",\r\n      \"nickname\": \"\u5f20\u4e09\",\r\n      \"role\": \"stuff\"\r\n    },\r\n    {\r\n      \"id\": \"56ed0805159ce100546b669e\",\r\n      \"nickname\": \"\u5f20\u4e09\",\r\n      \"role\": \"admin\"\r\n    }\r\n  ]\r\n}\r\n```\r\n### /accounts/account_id:str <span id=\"accounts-1\">\u7528\u6237\u5220\u3001\u6539\u3001\u67e5</span> \r\n\r\n#### get \u67e5\u770b\u7528\u6237\u8be6\u60c5\u4fe1\u606f\r\n##### response(get /accounts/56ed0805159ce100546b669e)\r\n```\r\n{\r\n  \"created\": \"Sat, 19 Mar 2016 16:04:21 -0000\",\r\n  \"description\": \"\",\r\n  \"id\": \"56ed0805159ce100546b669e\",\r\n  \"nickname\": \"\u5f20\u4e09\",\r\n  \"role\": \"admin\",\r\n  \"username\": \"yangjing1\"\r\n}\r\n```\r\n\r\n\r\n#### put \u67e5\u770b\u7528\u6237\u8be6\u60c5\u4fe1\u606f\r\n##### form-data\r\n```\r\nnickname: '\u5458\u5de5of\u5f20\u4e09'\r\nnew_password: 2 \uff08\u586b\u5199\u8be5\u6846\u8868\u793a\u8981\u4fee\u6539\u5bc6\u7801\uff0c\u53ef\u9009\uff09\r\nconfirm: 2 \uff08\u586b\u5199\u8be5\u6846\u8868\u793a\u8981\u4fee\u6539\u5bc6\u7801\uff0c\u53ef\u9009\uff09\r\nold_password: 1 \uff08\u586b\u5199\u8be5\u6846\u8868\u793a\u8981\u4fee\u6539\u5bc6\u7801\uff0c\u53ef\u9009\uff09\r\ndes: 'new_des' (\u53ef\u9009)\r\n```\r\n\r\n##### response(put /accounts/56ed073d159ce12b0c442de8)\r\n```\r\n{\r\n  \"id\": \"56ed073d159ce12b0c442de8\",\r\n  \"message\": \"user's profile update successfully!\",\r\n  \"success\": 1\r\n}\r\n```\r\n\r\n\r\n#### delete \u5220\u9664\u7528\u6237\r\n##### response(delete /accounts/56ed073d159ce12b0c442de8)\r\n```\r\n{\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n\r\n### /books <span id=\"books\">\u83b7\u53d6\u56fe\u4e66\u3001\u65b0\u589e\u56fe\u4e66</span> \r\n\r\n#### post \u83b7\u53d6\u56fe\u4e66\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\r\n##### form-data\r\n```\r\nname: \u6d77\u8d3c\u738b\r\ncount: 100\r\nprice: 20.5\r\ndes: \u53ef\u4e3a\u7a7a\r\n```\r\n##### response(post /books)\r\n```\r\n{\r\n  \"id\": \"56ed0c06159ce147ec4131dc\",\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n#### get \u83b7\u53d6\u56fe\u4e66\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\r\n##### response(get /books)\r\n```\r\n{\r\n  \"books\": [\r\n    {\r\n      \"id\": \"56ed0c06159ce147ec4131dc\",\r\n      \"name\": \"\u6d77\u8d3c\u738b\",\r\n      \"price\": 20.5,\r\n      \"sales\": 0\r\n    },\r\n    {\r\n      \"id\": \"56ed0c66159ce147ec4131dd\",\r\n      \"name\": \"\u91d1\u74f6\u6885\",\r\n      \"price\": 58,\r\n      \"sales\": 0\r\n    }\r\n  ]\r\n}\r\n```\r\n### /books/book_id:str <span id=\"books-1\">\u56fe\u4e66\u5220\u3001\u6539\u3001\u67e5</span> \r\n\r\n#### get \u67e5\u770b\u56fe\u4e66\u8be6\u60c5\u4fe1\u606f\r\n##### response(get /books/56ed0c66159ce147ec4131dd)\r\n```\r\n{\r\n  \"description\": \"\u5f20\u4e09\u559c\u6b22\u7684\u6545\u4e8b\",\r\n  \"id\": \"56ed0c66159ce147ec4131dd\",\r\n  \"name\": \"\u91d1\u74f6\u6885\",\r\n  \"price\": 58,\r\n  \"remaining\": 100,\r\n  \"sales\": 0,\r\n  \"type\": []\r\n}\r\n```\r\n#### put \u66f4\u65b0\u56fe\u4e66\u4fe1\u606f\r\n##### form-data\r\n```\r\ndelta: -20\r\nprice: 100\r\ndes = '\u5f20\u4e09\u8d85\u7ea7\u559c\u6b22\u7684\u6545\u4e8b\uff0c\u88ab\u4ed6\u4e70\u6389\u4e8620\u672c\uff0c\u56e0\u6b64\u5347\u4ef7\u4e3a100\u5143'(\u53ef\u9009)\r\ntype_id = 'type_id1'\uff08\u6839\u636e\u79cd\u7c7bid\u6dfb\u52a0\u4e00\u4e2a\u79cd\u7c7b\uff0c\u82e5\u4e0d\u5b58\u5728id\u5ffd\u7565\uff09\r\ntype_id = 'type_id2'\uff08\u8868\u793a\u4e00\u6b21\u6027\u6dfb\u52a0\u4e24\u4e2a\u79cd\u7c7b\uff09\r\n```\r\n##### response(put /books/56ed0c66159ce147ec4131dd)\r\n```\r\n{\r\n  \"id\": \"56ed0c66159ce147ec4131dd\",\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n#### delete \u4e0b\u67b6\u67d0\u56fe\u4e66\r\n##### response(delete /books/56ed0c66159ce147ec4131dd)\r\n```\r\n{\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n\r\n### /vips <span id=\"vips\">\u83b7\u53d6VIP\u3001\u65b0\u589eVIP</span> \r\n\r\n#### post \u65b0\u589eVIP\r\n##### form-data\r\n```\r\nusername: vip1\r\nnickname: \u6211\u662f\u5927V\r\nphone: 1233457 \uff08\u53ef\u9009\u6700\u957f15\uff09\r\n```\r\n##### response (post /vips)\r\n```\r\n{\r\n  \"id\": \"56ed0ec2159ce1266c62acae\",\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n#### get \u83b7\u53d6VIP\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\r\n```\r\n{\r\n  \"vips\": [\r\n    {\r\n      \"id\": \"56ed0ec2159ce1266c62acae\",\r\n      \"nickname\": \"\u6211\u662f\u5927V\",\r\n      \"phone\": \"1233457\",\r\n      \"username\": \"vip1\"\r\n    },\r\n    {\r\n      \"id\": \"56ed0ed7159ce1266c62acaf\",\r\n      \"nickname\": \"\u6211\u4e5f\u662f\u5927V\",\r\n      \"phone\": \"12345678901\",\r\n      \"username\": \"vip2\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### /vips/vip_id:str <span id=\"vips-1\">VIP\u5220\u9664\u3002</span> \r\n\r\n#### delete \u67e5\u770b\u67d0VIP\u8be6\u60c5\u4fe1\u606f\r\n##### response (delete /vips/56ed0ec2159ce1266c62acae)\r\n```\r\n{\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n\r\n### /types <span id=\"types\">\u83b7\u53d6\u4e66\u79cd\u3001\u65b0\u589e\u4e66\u79cd\u3002</span> \r\n\r\n#### post \u65b0\u589e\u4e66\u79cd\r\n##### form-data\r\n```\r\nname: \u52a8\u6f2b\r\n```\r\n##### response (post /types)\r\n```\r\n{\r\n  \"id\": \"56ed0f92159ce1266c62acb0\",\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n\r\n#### get \u83b7\u53d6\u4e66\u79cd\u5217\u8868\uff08\u542b\u8fc7\u6ee4\uff09\r\n##### response(get /types)\r\n```\r\n{\r\n  \"books_types\": [\r\n    {\r\n      \"id\": \"56ed0f92159ce1266c62acb0\",\r\n      \"name\": \"\u52a8\u6f2b\"\r\n    },\r\n    {\r\n      \"id\": \"56ed0f9d159ce1266c62acb1\",\r\n      \"name\": \"\u70ed\u8840\"\r\n    },\r\n    {\r\n      \"id\": \"56ed0fa1159ce1266c62acb2\",\r\n      \"name\": \"\u540e\u5bab\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### /types/book_type_id:str <span id=\"types-1\">\u4e66\u79cd\u5220\u9664\u3002</span> \r\n\r\n#### delete \u67e5\u770b\u67d0\u4e66\u7c4d\u8be6\u60c5\u4fe1\u606f\r\n#### response(delete /types/56ed0f9d159ce1266c62acb1)\r\n```\r\n{\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n\r\n### /sales_records \u83b7\u53d6\u9500\u552e\u8bb0\u5f55\u3001\u6dfb\u52a0\u9500\u552e\u8bb0\u5f55\r\n#### post \u9500\u552e\u56fe\u4e66\r\n##### form-data\r\n```\r\ncount: 1\r\nseller_id: 56ed05cb159ce12c74a634f5\r\nbook_id: 56ed0c06159ce147ec4131dc\r\npurchaser_id:56ed0ed7159ce1266c62acaf (\u53ef\u9009)\r\n```\r\n##### response (post /sales_records)\r\n```\r\n{\r\n  \"id\": \"56ed10f1159ce1266c62acb3\",\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n\r\n#### get \u83b7\u53d6\u9500\u552e\u8bb0\u5f55\u5217\u8868\r\n##### response (get /sales_records)\r\n```\r\n{\r\n  \"sales_records\": [\r\n    {\r\n      \"book\": {\r\n        \"id\": \"56ed0c06159ce147ec4131dc\",\r\n        \"name\": \"\u6d77\u8d3c\u738b\",\r\n        \"price\": 20.5,\r\n        \"sales\": 3\r\n      },\r\n      \"count\": 1,\r\n      \"id\": \"56ed10f1159ce1266c62acb3\",\r\n      \"price\": 16.400000000000002,\r\n      \"purchaser\": {\r\n        \"id\": \"56ed0ed7159ce1266c62acaf\",\r\n        \"nickname\": \"\u6211\u4e5f\u662f\u5927V\",\r\n        \"phone\": \"12345678901\",\r\n        \"username\": \"vip2\"\r\n      },\r\n      \"sale_time\": \"Sat, 19 Mar 2016 16:42:25 -0000\",\r\n      \"seller\": {\r\n        \"id\": \"56ed05cb159ce12c74a634f5\",\r\n        \"nickname\": \"YuJun\",\r\n        \"role\": \"stuff\"\r\n      }\r\n    },\r\n    {\r\n      \"book\": {\r\n        \"id\": \"56ed0c06159ce147ec4131dc\",\r\n        \"name\": \"\u6d77\u8d3c\u738b\",\r\n        \"price\": 20.5,\r\n        \"sales\": 3\r\n      },\r\n      \"count\": 2,\r\n      \"id\": \"56ed11b2159ce101a8f49bdb\",\r\n      \"price\": 20.5,\r\n      \"purchaser\": {\r\n        \"id\": null,\r\n        \"nickname\": null,\r\n        \"phone\": null,\r\n        \"username\": null\r\n      },\r\n      \"sale_time\": \"Sat, 19 Mar 2016 16:45:38 -0000\",\r\n      \"seller\": {\r\n        \"id\": \"56ed05cb159ce12c74a634f5\",\r\n        \"nickname\": \"YuJun\",\r\n        \"role\": \"stuff\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### /references/book2type/book_type_id:str <span id=\"book2type\">\u89e3\u9664\u56fe\u4e66\u5bf9\u4e66\u79cd\u7684\u7d22\u5f15\u3001\u83b7\u53d6\u67d0\u4e66\u79cd\u7684\u6240\u6709\u56fe\u4e66\u3002</span> \r\n\r\n#### get \u83b7\u53d6\u67d0\u4e66\u79cd\u6240\u6709\u56fe\u4e66\r\n##### response (get /references/book2type/56ed140a159ce139bca7ad1a)\r\n```\r\n{\r\n  \"books\": [\r\n    {\r\n      \"id\": \"56ed0c06159ce147ec4131dc\",\r\n      \"name\": \"\u6d77\u8d3c\u738b\",\r\n      \"price\": 20,\r\n      \"sales\": 3\r\n    }\r\n  ]\r\n}\r\n```\r\n#### delete \u89e3\u9664\u56fe\u4e66\u5bf9\u4e66\u79cd\u7684\u7d22\u5f15\r\n##### response (delete /references/book2type/56ed140a159ce139bca7ad1a)\r\n```\r\n{\r\n  \"message\": \"No message\",\r\n  \"success\": 1\r\n}\r\n```\r\n\r\n### /references/record2account/account_id:str <span id=\"record2account\">\u83b7\u53d6\u67d0\u7528\u6237\u7684\u552e\u4e66\u8bb0\u5f55\u3002</span> \r\n\r\n#### get \u83b7\u53d6\u67d0\u7528\u6237\u552e\u4e66\u8bb0\u5f55\r\n##### response (get /references/record2account/56ed05cb159ce12c74a634f5)\r\n```\r\n{\r\n  \"sales_records\": [\r\n    {\r\n      \"book\": {\r\n        \"id\": \"56ed0c06159ce147ec4131dc\",\r\n        \"name\": \"\u6d77\u8d3c\u738b\",\r\n        \"price\": 20,\r\n        \"sales\": 3\r\n      },\r\n      \"count\": 1,\r\n      \"id\": \"56ed10f1159ce1266c62acb3\",\r\n      \"price\": 16.400000000000002,\r\n      \"purchaser\": {\r\n        \"id\": \"56ed0ed7159ce1266c62acaf\",\r\n        \"nickname\": \"\u6211\u4e5f\u662f\u5927V\",\r\n        \"phone\": \"12345678901\",\r\n        \"username\": \"vip2\"\r\n      },\r\n      \"sale_time\": \"Sat, 19 Mar 2016 16:42:25 -0000\",\r\n      \"seller\": {\r\n        \"id\": \"56ed05cb159ce12c74a634f5\",\r\n        \"nickname\": \"YuJun\",\r\n        \"role\": \"stuff\"\r\n      }\r\n    },\r\n    {\r\n      \"book\": {\r\n        \"id\": \"56ed0c06159ce147ec4131dc\",\r\n        \"name\": \"\u6d77\u8d3c\u738b\",\r\n        \"price\": 20,\r\n        \"sales\": 3\r\n      },\r\n      \"count\": 2,\r\n      \"id\": \"56ed11b2159ce101a8f49bdb\",\r\n      \"price\": 20.5,\r\n      \"purchaser\": {\r\n        \"id\": null,\r\n        \"nickname\": null,\r\n        \"phone\": null,\r\n        \"username\": null\r\n      },\r\n      \"sale_time\": \"Sat, 19 Mar 2016 16:45:38 -0000\",\r\n      \"seller\": {\r\n        \"id\": \"56ed05cb159ce12c74a634f5\",\r\n        \"nickname\": \"YuJun\",\r\n        \"role\": \"stuff\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### /references/record2book/book_id:str <span id=\"record2book\">\u83b7\u53d6\u67d0\u56fe\u4e66\u7684\u9500\u552e\u8bb0\u5f55\u3002</span> \r\n\r\n#### get \u83b7\u53d6\u67d0\u56fe\u4e66\u7684\u9500\u552e\u8bb0\u5f55\r\n##### response (get /references/record2book/56ed0c06159ce147ec4131dc)\r\n```\r\n{\r\n  \"sales_records\": [\r\n    {\r\n      \"book\": {\r\n        \"id\": \"56ed0c06159ce147ec4131dc\",\r\n        \"name\": \"\u6d77\u8d3c\u738b\",\r\n        \"price\": 20,\r\n        \"sales\": 3\r\n      },\r\n      \"count\": 1,\r\n      \"id\": \"56ed10f1159ce1266c62acb3\",\r\n      \"price\": 16.400000000000002,\r\n      \"purchaser\": {\r\n        \"id\": \"56ed0ed7159ce1266c62acaf\",\r\n        \"nickname\": \"\u6211\u4e5f\u662f\u5927V\",\r\n        \"phone\": \"12345678901\",\r\n        \"username\": \"vip2\"\r\n      },\r\n      \"sale_time\": \"Sat, 19 Mar 2016 16:42:25 -0000\",\r\n      \"seller\": {\r\n        \"id\": \"56ed05cb159ce12c74a634f5\",\r\n        \"nickname\": \"YuJun\",\r\n        \"role\": \"stuff\"\r\n      }\r\n    },\r\n    {\r\n      \"book\": {\r\n        \"id\": \"56ed0c06159ce147ec4131dc\",\r\n        \"name\": \"\u6d77\u8d3c\u738b\",\r\n        \"price\": 20,\r\n        \"sales\": 3\r\n      },\r\n      \"count\": 2,\r\n      \"id\": \"56ed11b2159ce101a8f49bdb\",\r\n      \"price\": 20.5,\r\n      \"purchaser\": {\r\n        \"id\": null,\r\n        \"nickname\": null,\r\n        \"phone\": null,\r\n        \"username\": null\r\n      },\r\n      \"sale_time\": \"Sat, 19 Mar 2016 16:45:38 -0000\",\r\n      \"seller\": {\r\n        \"id\": \"56ed05cb159ce12c74a634f5\",\r\n        \"nickname\": \"YuJun\",\r\n        \"role\": \"stuff\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### /references/record2vip/vip_id:str <span id=\"record2vip\">\u83b7\u53d6\u67d0VIP\u7684\u8d2d\u4e70\u8bb0\u5f55\u3002</span> \r\n\r\n#### get \u83b7\u53d6\u67d0VIP\u7684\u8d2d\u4e70\u8bb0\u5f55\r\n##### response(get /references/record2vip/56ed0ed7159ce1266c62acaf)\r\n```\r\n{\r\n  \"sales_records\": [\r\n    {\r\n      \"book\": {\r\n        \"id\": \"56ed0c06159ce147ec4131dc\",\r\n        \"name\": \"\u6d77\u8d3c\u738b\",\r\n        \"price\": 20,\r\n        \"sales\": 3\r\n      },\r\n      \"count\": 1,\r\n      \"id\": \"56ed10f1159ce1266c62acb3\",\r\n      \"price\": 16.400000000000002,\r\n      \"purchaser\": {\r\n        \"id\": \"56ed0ed7159ce1266c62acaf\",\r\n        \"nickname\": \"\u6211\u4e5f\u662f\u5927V\",\r\n        \"phone\": \"12345678901\",\r\n        \"username\": \"vip2\"\r\n      },\r\n      \"sale_time\": \"Sat, 19 Mar 2016 16:42:25 -0000\",\r\n      \"seller\": {\r\n        \"id\": \"56ed05cb159ce12c74a634f5\",\r\n        \"nickname\": \"YuJun\",\r\n        \"role\": \"stuff\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n", ".gitignore": "# Default ignored files\n/shelf/\n/workspace.xml\n# Editor-based HTTP Client requests\n/httpRequests/\n# Datasource local storage ignored files\n/dataSources/\n/dataSources.local.xml\n", "recommendations.md": "#### \u041f\u0435\u0440\u0435\u0438\u0434\u0442\u0438 \u043e\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u043a \u043e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443 \u0441\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430 \"\u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439\" \u043c\u043e\u0436\u0435\u0442 \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u043e\u0441\u0442\u044c \u043a\u043e\u0434\u0430. \n#### \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c dependency injection\n#### \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n#### \u041f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043a \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0430\u043c\n- **components/**\n  - **backend/**\n    - **application_name/**\n      - **adapters/** \n        - **app_database/**\n          - repositories.py\n          - settings.py\n        - **http_api/**\n          - create_app.py\n          - controllers.py\n          - settings.py\n      - **application/**\n        - interfaces.py\n        - service.py\n      - **composites/**\n        - **http_api.py** \n    - **tests/**\n      \n#### \u0441\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u043e\u0435\u043a\u0442 \u0432 python \u043f\u0430\u043a\u0435\u0442\n", "RESTfulApi": {}, "__init__.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: __init__.py.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\n# TODO: \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u0441\u043b\u043e\u0439 \u0430\u0434\u0430\u043f\u0442\u0435\u0440\r\n\r\nfrom common import *\r\n", "app.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: app.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\n# TODO: \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0442\u0438 \u0432 \u0441\u043b\u043e\u0439 adapter\r\nfrom flask import Blueprint\r\nfrom flask.ext.restful import Api\r\n\r\nfrom RESTfulApi.resources.session import Session\r\n\r\nfrom RESTfulApi.resources.account import Accounts, Account\r\n\r\nfrom RESTfulApi.resources.book import Books, Book\r\n\r\nfrom RESTfulApi.resources.vip import Vips, Vip\r\n\r\nfrom RESTfulApi.resources.book_type import BookTypes, BookType\r\n\r\nfrom RESTfulApi.resources.sales_record import SalesRecords\r\n\r\nfrom RESTfulApi.resources.reference import ReferenceBook2Type, ReferenceSaleRecord2Account\r\nfrom RESTfulApi.resources.reference import ReferenceSaleRecord2Book, ReferenceSale2Vip\r\n\r\napi_bp = Blueprint('api', __name__)\r\napi = Api(api_bp)\r\n\r\napi.add_resource(Session, '/session')\r\n\r\napi.add_resource(Accounts, '/accounts')\r\napi.add_resource(Account, '/accounts/<account_id>')\r\n\r\napi.add_resource(Books, '/books')\r\napi.add_resource(Book, '/books/<book_id>')\r\n\r\napi.add_resource(Vips, '/vips')\r\napi.add_resource(Vip, '/vips/<vip_id>')\r\n\r\napi.add_resource(BookTypes, '/types')\r\napi.add_resource(BookType, '/types/<book_type_id>')\r\n\r\napi.add_resource(SalesRecords, '/sales_records')\r\n\r\napi.add_resource(ReferenceBook2Type, '/references/book2type/<book_type_id>')\r\napi.add_resource(ReferenceSaleRecord2Account, '/references/record2account/<account_id>')\r\napi.add_resource(ReferenceSaleRecord2Book, '/references/record2book/<book_id>')\r\napi.add_resource(ReferenceSale2Vip, '/references/record2vip/<vip_id>')\r\n", "config": {}, "default.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: default.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\n# TODO: \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f\r\n#  \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432 settings \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c BaseSettins \u0438\u0437 Pydantic\r\n\r\nMONGODB_SETTINGS = {'DB': 'library'}  # \u8bbe\u7f6emongodb\u7684\u6570\u636e\u5e93\r\nPASSWORD_SECRET = 'secret_for_ensure_password_security'\r\nTOKEN_SECRET = 'secret_for_ensure_token_security'\r\n", ".idea": {}, "RESTfulAPI-master.iml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"Flask\">\n    <option name=\"enabled\" value=\"true\" />\n  </component>\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\" />\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n  <component name=\"PyDocumentationSettings\">\n    <option name=\"format\" value=\"PLAIN\" />\n    <option name=\"myDocStringFormat\" value=\"Plain\" />\n  </component>\n  <component name=\"TemplatesService\">\n    <option name=\"TEMPLATE_CONFIGURATION\" value=\"Jinja2\" />\n  </component>\n</module>", "workspace.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"17ce2d65-5a45-4c26-9b35-349c60c7ee75\" name=\"Changes\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\"><![CDATA[{\n  \"associatedIndex\": 8\n}]]></component>\n  <component name=\"ProjectId\" id=\"2pA4RT96YNQtdCvGX0IraDZMLIe\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showExcludedFiles\" value=\"false\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n    <option name=\"showScratchesAndConsoles\" value=\"false\" />\n    <option name=\"sortByType\" value=\"true\" />\n    <option name=\"sortKey\" value=\"BY_TYPE\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"com.codeium.enabled\": \"true\",\n    \"last_opened_file_path\": \"/Users/admin/Downloads/RESTfulAPI-master\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RunManager\">\n    <configuration name=\"RESTfulAPI-master\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"RESTfulAPI-master\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/run.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"17ce2d65-5a45-4c26-9b35-349c60c7ee75\" name=\"Changes\" comment=\"\" />\n      <created>1732195538196</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1732195538196</updated>\n      <workItem from=\"1732195539297\" duration=\"5724000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/RESTfulApi/models/shop_db.py</url>\n          <line>12</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>", "modules.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectModuleManager\">\n    <modules>\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/RESTfulAPI-master.iml\" filepath=\"$PROJECT_DIR$/.idea/RESTfulAPI-master.iml\" />\n    </modules>\n  </component>\n</project>", "misc.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"Black\">\n    <option name=\"sdkName\" value=\"Python 3.9 (vsfera)\" />\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.9 (vsfera)\" project-jdk-type=\"Python SDK\" />\n</project>", "handler": {}, "sales_record.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: sales_record.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom flask.ext.restful import fields\r\nfrom account import account_simple_fields\r\nfrom book import book_simple_fields\r\nfrom vip import vip_fields\r\n\r\nsales_record_fields = {\r\n    'id': fields.String,\r\n    'seller': fields.Nested(account_simple_fields),\r\n    'book': fields.Nested(book_simple_fields),\r\n    'price': fields.Float,\r\n    'count': fields.Integer,\r\n    'sale_time': fields.DateTime,\r\n    'purchaser': fields.Nested(vip_fields),\r\n}\r\n\r\n# from get /sales_records\r\nsales_records_fields = {\r\n    'sales_records': fields.List(fields.Nested(sales_record_fields))\r\n}\r\n", "session.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: session.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom flask.ext.restful import reqparse\r\n\r\n\r\n# ------------ login parser ------------\r\nlogin_parser = reqparse.RequestParser()\r\nlogin_parser.add_argument(\r\n    'username', dest='username',\r\n    type=str, location='form',\r\n    required=True, help='This is username',\r\n)\r\n\r\nlogin_parser.add_argument(\r\n    'password', dest='password',\r\n    type=str, location='form',\r\n    required=True, help='This is password',\r\n)\r\n", "vip.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: vip.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom flask.ext.restful import fields\r\n\r\n\r\nvip_fields = {\r\n    'id': fields.String,\r\n    'username': fields.String,\r\n    'nickname': fields.String,\r\n    'phone': fields.String,\r\n}\r\n\r\n# for get /vips\r\nvips_fields = {\r\n    'vips': fields.List(fields.Nested(vip_fields))\r\n}\r\n", "reference.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: reference.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom flask.ext.restful import Resource, marshal_with\r\nfrom RESTfulApi.utils.fields import deleted_fields\r\nfrom RESTfulApi.utils.parsers import token_parser\r\nfrom RESTfulApi.utils.fields.book import books_fields\r\nfrom RESTfulApi.utils.fields.sales_record import sales_records_fields\r\nfrom RESTfulApi.handler.reference import get_sales_records_by_book, get_sales_records_by_vip\r\nfrom RESTfulApi.handler.reference import get_books_by_type, rm_ref_book2type, get_sales_records_by_account\r\n\r\n\r\nclass ReferenceBook2Type(Resource):\r\n    @marshal_with(books_fields)\r\n    def get(self, book_type_id):\r\n        token = token_parser.parse_args().token\r\n        books = get_books_by_type(book_type_id, token=token)\r\n        return {'books': books}\r\n\r\n    @marshal_with(deleted_fields)\r\n    def delete(self, book_type_id):\r\n        token = token_parser.parse_args().token\r\n        result = rm_ref_book2type(book_type_id, token=token)\r\n        return result\r\n\r\n\r\nclass ReferenceSaleRecord2Account(Resource):\r\n    @marshal_with(sales_records_fields)\r\n    def get(self, account_id):\r\n        token = token_parser.parse_args().token\r\n        sales_records = get_sales_records_by_account(account_id, token=token)\r\n        return {'sales_records': sales_records}\r\n\r\n\r\nclass ReferenceSaleRecord2Book(Resource):\r\n    @marshal_with(sales_records_fields)\r\n    def get(self, book_id):\r\n        token = token_parser.parse_args().token\r\n        sales_records = get_sales_records_by_book(book_id, token=token)\r\n        return {'sales_records': sales_records}\r\n\r\n\r\nclass ReferenceSale2Vip(Resource):\r\n    @marshal_with(sales_records_fields)\r\n    def get(self, vip_id):\r\n        token = token_parser.parse_args().token\r\n        sales_records = get_sales_records_by_vip(vip_id, token=token)\r\n        return {'sales_records': sales_records}\r\n\r\n", "book.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: book.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom flask.ext.restful import fields\r\n\r\nfrom book_type import book_type_fields\r\n\r\n# for get /books/<book_id>\r\nbook_detail_fields = {\r\n    'id': fields.String,\r\n    'name': fields.String,\r\n    'price': fields.Float,\r\n    'remaining': fields.Integer,\r\n    'description': fields.String,\r\n    'sales': fields.Integer,\r\n    'type': fields.List(fields.Nested(book_type_fields)),\r\n}\r\n\r\n# for get /books\r\n\r\nbook_simple_fields = {\r\n    'id': fields.String,\r\n    'name': fields.String,\r\n    'price': fields.Float,\r\n    'sales': fields.Integer,\r\n}\r\n\r\nbooks_fields = {\r\n    'books': fields.List(fields.Nested(book_simple_fields))\r\n}\r\n\r\n", "book_type.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: book_type.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom flask.ext.restful import fields\r\n\r\nbook_type_fields = {\r\n    'id': fields.String,\r\n    'name': fields.String,\r\n}\r\n\r\n# for get /types\r\nbook_types_fields = {\r\n    'books_types': fields.List(fields.Nested(book_type_fields))\r\n}\r\n", "account.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: account.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom flask.ext.restful import fields\r\n\r\n# for get /accounts/<account_id>\r\naccount_detail_fields = {\r\n    'id': fields.String,\r\n    'username': fields.String,\r\n    'nickname': fields.String,\r\n    'role': fields.String,\r\n    'description': fields.String,\r\n    'created': fields.DateTime,\r\n}\r\n\r\n# for get /accounts\r\naccount_simple_fields = {\r\n    'id': fields.String,\r\n    'nickname': fields.String,\r\n    'role': fields.String,\r\n}\r\n\r\naccounts_fields = {\r\n    'accounts': fields.List(fields.Nested(account_simple_fields))\r\n}\r\n", "resources": {}, "utils": {}, "authority.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: authority.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\n\r\nfrom werkzeug import security\r\n\r\nfrom RESTfulApi.models.token_db import Token\r\nfrom RESTfulApi.models.shop_db import Account\r\n\r\ndef create_token(length=16):\r\n    return security.gen_salt(length)\r\n\r\n\r\ndef is_root(token):\r\n    token = Token.objects(token=token).first()\r\n    if token is None:\r\n        return False\r\n    account = Account.objects(id=token.user_id).first()\r\n    # TODO: \u0437\u0430\u043f\u0443\u0442\u0430\u043d\u043d\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430, \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u043e\u0449\u0435\r\n    #  return account is not None and account.username == 'root'\r\n    if account is None:\r\n        return False\r\n    if account.username == 'root':\r\n        return True\r\n    return False\r\n\r\n\r\ndef is_admin(token):\r\n    token = Token.objects(token=token).first()\r\n    if token is None:\r\n        return False\r\n    account = Account.objects(id=token.user_id).first()\r\n    # TODO: \u0437\u0430\u043f\u0443\u0442\u0430\u043d\u043d\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430, \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u043e\u0449\u0435\r\n    if account is None:\r\n        return False\r\n    if account.role == 'stuff':\r\n        return False\r\n    return True\r\n\r\n\r\ndef is_stuff(token):\r\n    token = Token.objects(token=token).first()\r\n    if token is None:\r\n        return False\r\n    account = Account.objects(id=token.user_id).first()\r\n    if account is None:\r\n        return False\r\n    return True\r\n\r\n\r\ndef is_self(account_id, token):\r\n    token = Token.objects(token=token).first()\r\n    if token is None:\r\n        return False\r\n    if account_id != token.user_id:\r\n        return False\r\n    return True\r\n", "models": {}, "token_db.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: token_db.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\n\r\nfrom datetime import datetime\r\n# TODO: \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0443\u0436\u043d\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438\r\nfrom mongoengine import *\r\n\r\n\r\nclass Token(Document):\r\n    user_id = StringField(required=True, unique=True)\r\n    token = StringField(default='', unique=True)\r\n    created = DateTimeField(default=datetime.today)\r\n", "init.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: init.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom mongoengine import connect\r\nfrom werkzeug import security\r\nfrom RESTfulApi.models.shop_db import Account\r\nfrom RESTfulApi.models.token_db import Token\r\nfrom RESTfulApi.utils.authority import create_token\r\n\r\n# TODO: \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u044c \u0438\u0437 \u0441\u043b\u043e\u044f \u043a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\r\nconnect('library')\r\n\r\n\r\ndef create_password(raw):\r\n    pwd = '{old}{new}'.format(old=raw, new='secret_for_ensure_password_security')\r\n    return security.generate_password_hash(pwd)\r\n\r\n\r\n# \u56e0\u4ee3\u7801\u9700\u8981\uff0c\u7528\u6237\u540d\u5fc5\u987b\u4e3aroot\r\ndef create_root(username='root', password='password', role='admin', nickname='Super'):\r\n    account = Account(\r\n        username=username,\r\n        nickname=nickname,\r\n        password=create_password(password),\r\n        role=role,\r\n    ).save()\r\n    token = Token(\r\n        user_id=str(account.id),\r\n        token=create_token(),\r\n    ).save()\r\n    return token.token\r\n\r\nif __name__ == '__main__':\r\n    # TODO: \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c print\r\n    print create_root()\r\n\r\n", "shop_db.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: shop_db.py\r\n    Function Des: MongoDB\u6570\u636e\u5e93\u6620\u5c04\r\n    ~~~~~~~~~~\r\n\r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n\r\n\"\"\"\r\n\r\nfrom datetime import datetime\r\nfrom mongoengine import *\r\nfrom werkzeug import security\r\nfrom flask import current_app\r\n\r\n\r\n__all__ = ['Type', 'Book', 'SalesRecord', 'Vip', 'Account']\r\n\r\n\r\nclass Vip(Document):\r\n    username = StringField(required=True, max_length=5, unique=True)\r\n    nickname = StringField(required=True, max_length=40)\r\n    phone = StringField(max_length=15)\r\n    register_time = DateTimeField(default=datetime.today)\r\n\r\n\r\nclass Type(Document):\r\n    name = StringField(required=True, unique=True)\r\n\r\n\r\nclass Book(Document):\r\n    name = StringField(required=True, max_length=40, unique=True)\r\n    price = FloatField(required=True)\r\n    sales = IntField(default=0)\r\n    remaining = IntField(required=True)\r\n    description = StringField(default='', max_length=400)\r\n    type = ListField(ReferenceField(Type, reverse_delete_rule=DENY))\r\n\r\n\r\nclass Account(Document):\r\n    username = StringField(required=True, max_length=10, unique=True)\r\n    password = StringField(required=True, max_length=100)\r\n    nickname = StringField(required=True, max_length=10)\r\n    role = StringField(max_length=10, default='stuff')\r\n    description = StringField(default='', max_length=400)\r\n\r\n    created = DateTimeField(default=datetime.today)\r\n\r\n    @staticmethod\r\n    def create_password(raw):\r\n        pwd = '{old}{new}'.format(old=raw, new=current_app.config['PASSWORD_SECRET'])\r\n        return security.generate_password_hash(pwd)\r\n\r\n    @staticmethod\r\n    def is_admin(self):\r\n        return self.role == 'admin'\r\n\r\n    @staticmethod\r\n    def check_password(user, raw):\r\n        pwd = '{old}{new}'.format(old=raw, new=current_app.config['PASSWORD_SECRET'])\r\n        return security.check_password_hash(user.password, pwd)\r\n\r\n\r\nclass SalesRecord(Document):\r\n    seller = ReferenceField(Account, required=True)\r\n    book = ReferenceField(Book, required=True)\r\n    price = FloatField(required=True)\r\n    count = IntField(default=1)\r\n    sale_time = DateTimeField(default=datetime.today)\r\n    purchaser = ReferenceField(Vip, required=False)\r\n\r\n", "common": {}, "fields.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: fields.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom flask.ext.restful import fields\r\n\r\n\r\n# ------------ book ------------\r\ntypes_fields = {\r\n    'id': fields.String,\r\n    'name': fields.String,\r\n}\r\n\r\nbook_fields = {\r\n    'id': fields.String,\r\n    'name': fields.String,\r\n    'price': fields.Float,\r\n    'remaining': fields.Integer,\r\n    'description': fields.String,\r\n    'sales': fields.Integer,\r\n    'type': fields.List(fields.Nested(types_fields)),\r\n}\r\n\r\nbooks_fields = {\r\n    'books': fields.List(fields.Nested(book_fields))\r\n}\r\n\r\n# ------------ book type ------------\r\nbook_type_fields = {\r\n    'id': fields.String,\r\n    'name': fields.String,\r\n}\r\n\r\nbook_types_fields = {\r\n    'books_types': fields.List(fields.Nested(book_type_fields))\r\n}\r\n\r\n\r\n# ------------ account ------------\r\ntoken_fields = {\r\n    'token': fields.String,\r\n    'message': fields.String,\r\n}\r\n\r\naccount_fields = {\r\n    'id': fields.String,\r\n    'username': fields.String,\r\n    'nickname': fields.String,\r\n    'role': fields.String,\r\n    'description': fields.String,\r\n    'created': fields.DateTime,\r\n}\r\n\r\naccounts_fields = {\r\n    'accounts': fields.List(fields.Nested(account_fields))\r\n}\r\n\r\n\r\n# ------------ vip ------------\r\nvip_fields = {\r\n    'id': fields.String,\r\n    'username': fields.String,\r\n    'nickname': fields.Float,\r\n    'phone': fields.String,\r\n}\r\n\r\nvips_fields = {\r\n    'vips': fields.List(fields.Nested(vip_fields))\r\n}\r\n\r\n# ------------ sale_record ------------\r\nsales_record_fields = {\r\n    'id': fields.String,\r\n    'seller': fields.List(fields.Nested(account_fields)),\r\n    'book': fields.List(fields.Nested(book_fields)),\r\n    'count': fields.Integer,\r\n    'sale_time': fields.DateTime,\r\n    'price': fields.Float,\r\n    'purchaser': fields.List(fields.Nested(vip_fields)),\r\n    'message': fields.String,\r\n}\r\n\r\nsales_records_fields = {\r\n    'sales_records': fields.List(fields.Nested(sales_record_fields))\r\n}\r\n", "util.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: util.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\n\r\n# TODO: \u043f\u0443\u0441\u0442\u043e\u0439 \u043c\u043e\u0434\u0443\u043b\u044c", "parsers.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: parsers.py\r\n    Function Des: ...\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\n\r\n# TODO: \u043d\u0430 \u043c\u043e\u0439 \u0432\u0437\u043b\u044f\u0434 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u0435\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044cPydantic\r\n\r\nfrom flask.ext.restful import reqparse\r\n\r\n# ------------ book parser ------------\r\nbook_parser = reqparse.RequestParser()\r\nbook_parser.add_argument(\r\n    'name', dest='name',\r\n    type=unicode, location='form',\r\n    required=True, help='The book\\'s name',\r\n)\r\n\r\nbook_parser.add_argument(\r\n    'count', dest='count',\r\n    type=int, location='form',\r\n    required=True, help='The book\\'s count',\r\n)\r\n\r\nbook_parser.add_argument(\r\n    'price', dest='price',\r\n    type=float, location='form',\r\n    required=True, help='The book\\'s price',\r\n)\r\n\r\nbook_parser.add_argument(\r\n    'des', dest='des',\r\n    type=str, location='form',\r\n    required=False, help='The book\\'s description',\r\n)\r\n\r\n# ------------ book_update parser ------------\r\nbook_update_parser = reqparse.RequestParser()\r\nbook_update_parser.add_argument(\r\n    'delta', dest='delta',\r\n    type=int, location='form',\r\n    required=True, help='The book\\'s deviation',\r\n)\r\n\r\nbook_update_parser.add_argument(\r\n    'price', dest='price',\r\n    type=float, location='form',\r\n    required=True, help='The book\\'s new price',\r\n)\r\n\r\nbook_update_parser.add_argument(\r\n    'des', dest='des',\r\n    type=str, location='form',\r\n    required=False, help='The book\\'s new description',\r\n)\r\n\r\nbook_update_parser.add_argument(\r\n    'type_id', dest='types_id', action='append',\r\n    type=str, location='form',\r\n    required=True, help='The book\\'s new list of type id',\r\n)\r\n\r\n\r\n# ------------ book_type parser ------------\r\nbook_type_parser = reqparse.RequestParser()\r\nbook_type_parser.add_argument(\r\n    'name', dest='name',\r\n    type=unicode, location='form',\r\n    required=True, help='The book_type\\'s name',\r\n)\r\n\r\n\r\n# ------------ login parser ------------\r\nlogin_parser = reqparse.RequestParser()\r\nlogin_parser.add_argument(\r\n    'username', dest='username',\r\n    type=str, location='form',\r\n    required=True, help='This is username',\r\n)\r\n\r\nlogin_parser.add_argument(\r\n    'password', dest='password',\r\n    type=str, location='form',\r\n    required=True, help='This is password',\r\n)\r\n\r\n# ------------ logout parser ------------\r\ntoken_parser = reqparse.RequestParser()\r\ntoken_parser.add_argument('token', location='headers', required=True)\r\n\r\n# ------------ register parser ------------\r\nregister_parser = reqparse.RequestParser()\r\nregister_parser.add_argument(\r\n    'username', dest='username',\r\n    type=str, location='form',\r\n    required=True, help='This is username',\r\n)\r\n\r\nregister_parser.add_argument(\r\n    'nickname', dest='nickname',\r\n    type=unicode, location='form',\r\n    required=True, help='This is nickname',\r\n)\r\n\r\nregister_parser.add_argument(\r\n    'password', dest='password',\r\n    type=str, location='form',\r\n    required=True, help='This is password',\r\n)\r\n\r\nregister_parser.add_argument(\r\n    'confirm', dest='confirm',\r\n    type=str, location='form',\r\n    required=True, help='This is password\\'s confirm',\r\n)\r\nregister_parser.add_argument(\r\n    'role', dest='role',\r\n    type=int, location='form',\r\n    required=True, help='This is user\\'s role',\r\n)\r\n\r\n# ------------ register parser ------------\r\naccount_update_parser = reqparse.RequestParser()\r\n\r\naccount_update_parser.add_argument(\r\n    'nickname', dest='nickname',\r\n    type=str, location='form',\r\n    required=True, help='This is new nickname',\r\n)\r\n\r\nbook_update_parser.add_argument(\r\n    'des', dest='des',\r\n    type=str, location='form',\r\n    required=False, help='The account description',\r\n)\r\n\r\n# ------------ vip parser ------------\r\nvip_parser = reqparse.RequestParser()\r\nvip_parser.add_argument(\r\n    'username', dest='username',\r\n    type=unicode, location='form',\r\n    required=True, help='The vip\\'s username',\r\n)\r\n\r\nvip_parser.add_argument(\r\n    'nickname', dest='nickname',\r\n    type=unicode, location='form',\r\n    required=True, help='The vip\\'s nickname',\r\n)\r\n\r\nvip_parser.add_argument(\r\n    'phone', dest='phone',\r\n    type=str, location='form',\r\n    required=False, help='The vip\\'s phone',\r\n)\r\n\r\n# ------------ sales record parser ------------\r\nsales_record_parser = reqparse.RequestParser()\r\nsales_record_parser.add_argument(\r\n    'count', dest='count',\r\n    type=int, location='form',\r\n    required=True, help='The sales\\'s count',\r\n)\r\n\r\nsales_record_parser.add_argument(\r\n    'seller_id', dest='seller_id',\r\n    type=str, location='form',\r\n    required=True, help='The sales\\'s seller id',\r\n)\r\n\r\nsales_record_parser.add_argument(\r\n    'book_id', dest='book_id',\r\n    type=str, location='form',\r\n    required=True, help='The sales\\'s book id',\r\n)\r\n\r\nsales_record_parser.add_argument(\r\n    'purchaser_id', dest='purchaser_id',\r\n    type=str, location='form',\r\n    required=False, help='The sales\\'s purchaser id',\r\n)\r\n", "inspectionProfiles": {}, "profiles_settings.xml": "<component name=\"InspectionProjectProfileManager\">\n  <settings>\n    <option name=\"USE_PROJECT_PROFILE\" value=\"false\" />\n    <version value=\"1.0\" />\n  </settings>\n</component>", "Project_Default.xml": "<component name=\"InspectionProjectProfileManager\">\n  <profile version=\"1.0\">\n    <option name=\"myName\" value=\"Project Default\" />\n    <inspection_tool class=\"PyPackageRequirementsInspection\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\n      <option name=\"ignoredPackages\">\n        <value>\n          <list size=\"9\">\n            <item index=\"0\" class=\"java.lang.String\" itemvalue=\"pydantic\" />\n            <item index=\"1\" class=\"java.lang.String\" itemvalue=\"python-json-logger\" />\n            <item index=\"2\" class=\"java.lang.String\" itemvalue=\"embrace\" />\n            <item index=\"3\" class=\"java.lang.String\" itemvalue=\"classic-components\" />\n            <item index=\"4\" class=\"java.lang.String\" itemvalue=\"psycopg2-binary\" />\n            <item index=\"5\" class=\"java.lang.String\" itemvalue=\"python-dotenv\" />\n            <item index=\"6\" class=\"java.lang.String\" itemvalue=\"gunicorn\" />\n            <item index=\"7\" class=\"java.lang.String\" itemvalue=\"pyjwt\" />\n            <item index=\"8\" class=\"java.lang.String\" itemvalue=\"spectree\" />\n          </list>\n        </value>\n      </option>\n    </inspection_tool>\n  </profile>\n</component>", "parsers": {}, "common.py": "#!/usr/bin/env python\r\n# encoding: utf-8\r\n\r\n\"\"\"\r\n    File name: common.py\r\n    Function Des: post/delete/put\u54cd\u5e94\u5185\u5bb9\r\n    ~~~~~~~~~~\r\n    \r\n    author: Jerry <cuteuy@gmail.com> <http://www.skyduy.com>\r\n    \r\n\"\"\"\r\nfrom flask.ext.restful import fields\r\n\r\n# after post/put with return id\r\npt_fields = {\r\n    'id': fields.String,\r\n    'success': fields.Integer(default=0),\r\n    'message': fields.String(default='No message'),\r\n}\r\n\r\n# after post/put with return token\r\npt_fields_with_token = {\r\n    'id': fields.String,\r\n    'token': fields.String,\r\n    'success': fields.Integer(default=0),\r\n    'message': fields.String(default='No message'),\r\n}\r\n\r\n# after delete\r\ndeleted_fields = {\r\n    'success': fields.Integer(default=0),\r\n    'message': fields.String(default='No message'),\r\n}\r\n", "fields": {}}